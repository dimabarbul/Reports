name: Tests

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch: {}

jobs:
  run-tests-on-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal
    - name: Run docs samples
      shell: pwsh
      run: |
        $files = Get-ChildItem -Path docs -Recurse -Filter *.csproj -Exclude XReports.DocsSamples.Common.csproj
        foreach ($file in $files)
        {
          Write-Host "*** Running $($file.Name)" -ForegroundColor Green
          $output = & dotnet run -c Release --no-build --project $file.FullName
          Write-Host $output
          Write-Host

          if ($LASTEXITCODE -ne 0)
          {
            exit 1;
          }
        }


  run-tests-on-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal
    - name: Run docs samples
      shell: pwsh
      run: |
        $files = Get-ChildItem -Path docs -Recurse -Filter *.csproj -Exclude XReports.DocsSamples.Common.csproj
        foreach ($file in $files)
        {
          Write-Host "*** Running $($file.Name)" -ForegroundColor Green
          $output = & dotnet run -c Release --no-build --project $file.FullName
          Write-Host $output
          Write-Host

          if ($LASTEXITCODE -ne 0)
          {
            exit 1;
          }
        }
