@model Reports.Demos.MVC.Controllers.EpplusWriterExtensions.ThreeColorHeatmapConditionalController.ViewModel

@{
    ViewBag.Title = "3-Color Heatmap Using Conditional Formatting";
    Layout = "_DemoPageLayout";
}

<a asp-action="Download">Download</a>

@section Description
{
    <p>Conditional formatting capability (as many other Excel features) is not provided out-of-the-box. But to improve Excel report quality, you may exten EpplusWriter.</p>
    <p>In current implementation we highlight values closer to 0 in red, to 50 - in yellow, closer to 100 - green. And this is done using conditional formatting in Excel. Which means that if you change cell value, its color will change as well.</p>
}

@section ReportTable
{
@Html.Raw(Model.ReportTableHtml)
}

@section Code
{
    class ThreeColorHeatmapProperty : ReportCellProperty
    {
        public decimal MinimumValue { get; set; }
        public Color MinimumColor { get; set; }
        public decimal MiddleValue { get; set; }
        public Color MiddleColor { get; set; }
        public decimal MaximumValue { get; set; }
        public Color MaximumColor { get; set; }

        public ThreeColorHeatmapProperty(decimal minimumValue, Color minimumColor, decimal middleValue, Color middleColor, decimal maximumValue, Color maximumColor)
        {
            this.MinimumValue = minimumValue;
            this.MinimumColor = minimumColor;
            this.MiddleValue = middleValue;
            this.MiddleColor = middleColor;
            this.MaximumValue = maximumValue;
            this.MaximumColor = maximumColor;
        }
    }

    // As there is no Excel handler for the property, it ends up in Properties collection of Excel report cell.
    class ConditionalFormattingThreeColorScaleFormatter : IEpplusFormatter
    {
        public void Format(ExcelRange worksheetCell, ExcelReportCell cell)
        {
            ThreeColorHeatmapProperty property = cell.GetProperty&lt;ThreeColorHeatmapProperty&gt;();

            // continue only if property is set on cell
            if (property == null)
            {
                return;
            }

            IExcelConditionalFormattingThreeColorScale threeColorScale = worksheetCell.ConditionalFormatting.AddThreeColorScale();
            threeColorScale.LowValue.Type = eExcelConditionalFormattingValueObjectType.Num;
            threeColorScale.LowValue.Value = (double) property.MinimumValue;
            threeColorScale.LowValue.Color = property.MinimumColor;
            threeColorScale.MiddleValue.Type = eExcelConditionalFormattingValueObjectType.Num;
            threeColorScale.MiddleValue.Value = (double) property.MiddleValue;
            threeColorScale.MiddleValue.Color = property.MiddleColor;
            threeColorScale.HighValue.Type = eExcelConditionalFormattingValueObjectType.Num;
            threeColorScale.HighValue.Value = (double) property.MaximumValue;
            threeColorScale.HighValue.Color = property.MaximumColor;
        }
    }
}
