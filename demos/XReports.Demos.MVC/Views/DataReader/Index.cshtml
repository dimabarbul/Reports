@model XReports.Demos.MVC.Models.Shared.ReportViewModel

@{
    ViewBag.Title = "From IDataReader";
    Layout = "_DemoPageLayout";
}

<a asp-action="Download">Download</a>

@section Description
{
    <p>Sometimes there is too much data to load into memory. In this case IDataReader might be used to load data progressively. This makes sense only for vertical report though, as horizontal report enumerates data source multiple times.</p>
}

@section ReportTable
{
@Html.Raw(Model.ReportTableHtml)
}

@section Code
{
    ReportSchemaBuilder&lt;IDataReader&gt; builder = new ReportSchemaBuilder&lt;IDataReader&gt;();
    builder.AddColumn("ID", x => x.GetInt32(0));
    builder.AddColumn("First Name", x => x.GetString(1));
    builder.AddColumn("Last Name", x => x.GetString(2));
    builder.AddColumn("Email", x => x.GetString(3));

    IReportSchema&lt;IDataReader&gt; schema = builder.BuildVerticalSchema();

    using IDataReader dataReader = await this.appDbContext.Database.GetDbConnection()
        .ExecuteReaderAsync("SELECT Id, FirstName, LastName, Email FROM Users");
    IReportTable&lt;ReportCell&gt; reportTable = schema.BuildReportTable(dataReader.AsEnumerable());
}
