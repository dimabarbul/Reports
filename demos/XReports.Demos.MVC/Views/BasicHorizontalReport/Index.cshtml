@model XReports.Demos.MVC.Controllers.HorizontalReports.BasicHorizontalReportController.ViewModel

@{
    ViewBag.Title = "Horizontal";
    Layout = "_DemoPageLayout";
}

<a asp-action="Download">Download</a>

@section Description
{
    <p>Example of horizontal report.</p>
}

@section ReportTable
{
@Html.Raw(Model.ReportTableHtml)
}

@section Code
{
    private IReportTable&lt;ReportCell&gt; BuildReport()
    {
        ReportCellProperty centerAlignment = new AlignmentProperty(AlignmentType.Center);

        HorizontalReportBuilder&lt;Entity&gt; reportBuilder = new HorizontalReportBuilder&lt;Entity&gt;();
        reportBuilder.AddHeaderRow(string.Empty, e =&gt; e.Name)
            .AddProperty(centerAlignment);
        reportBuilder.AddRow("Age", e =&gt; e.Age)
            .AddProperty(centerAlignment);

        reportBuilder.AddRow(new NullCellsProvider&lt;Entity&gt;("Score"));
        reportBuilder.AddRow("Min. Score", e =&gt; e.MinScore)
            .AddProperty(centerAlignment);
        reportBuilder.AddRow("Max. Score", e =&gt; e.MaxScore)
            .AddProperty(centerAlignment);
        reportBuilder.AddRow("Avg. Score", e =&gt; e.AverageScore)
            .AddProperty(new DecimalPrecisionProperty(2))
            .AddProperty(centerAlignment);

        reportBuilder.AddTitleProperty("Age", new BoldProperty());
        reportBuilder.AddTitleProperty("Score", new BoldProperty());
        reportBuilder.AddTitleProperty("Min. Score", new IndentationProperty());
        reportBuilder.AddTitleProperty("Max. Score", new IndentationProperty());
        reportBuilder.AddTitleProperty("Avg. Score", new IndentationProperty());

        return reportBuilder.Build(this.GetData());
    }
}
